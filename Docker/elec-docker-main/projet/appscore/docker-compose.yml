version: '3.9'

networks:
  rabbitmq-net:
  redis-net:
  sql-net:
  web-net:

volumes:
  sql-data:

services:
  user.data:
    image: redis:7.0.8
    container_name: user.data
    ports:
      - 6379:6379
    networks:
      - redis-net

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 5
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - rabbitmq-net
    
  sql.data:
    container_name: sql.data
    build:
      dockerfile: Dockerfile
      context: ./Database
    # ports:
    #   - 1433:1433
    volumes:
      - sql-data:/data
    networks:
      - sql-net
    
  applicants.api:
    image: davidmtdev/applicants.api:latest
    container_name: service-api-applicants
    ports: 
      - 8081:80
    environment:
      - ConnectionString=Server=sql.data;User=sa;Password=Pass@word;Database=dotnetgigs.applicants;
      - HostRabbitmq=rabbitmq
    networks:
      - rabbitmq-net
      - sql-net
      - web-net
    depends_on:
      rabbitmq:
        condition: service_healthy
      sql.data:
        condition: service_started

  jobs.api:
    image: davidmtdev/jobs.api:latest
    container_name: service-api-jobs
    ports: 
    - 8083:80
    environment:
      - ConnectionString=Server=sql.data;User=sa;Password=Pass@word;Database=dotnetgigs.jobs;
      - HostRabbitmq=rabbitmq 
    networks:
      - rabbitmq-net
      - sql-net
      - web-net
    depends_on:
      rabbitmq:
        condition: service_healthy
      sql.data:
        condition: service_started
    
  identity.api:
    image: davidmtdev/identity.api:latest
    container_name: service-api-identity
    ports: 
      - 8084:80
    environment:
      - RedisHost=user.data:6379
      - HostRabbitmq=rabbitmq
    networks:
      - rabbitmq-net
      - redis-net
      - web-net
    depends_on:
      rabbitmq:
        condition: service_healthy    
      user.data:
        condition: service_started

  web:
    container_name: web
    build:
      dockerfile: Web/Dockerfile
      context: ./
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports: 
      - 80:80
    networks:
      - web-net
    depends_on:
      - applicants.api
      - identity.api
      - jobs.api
